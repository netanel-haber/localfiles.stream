(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const a of document.querySelectorAll('link[rel="modulepreload"]'))r(a);new MutationObserver(a=>{for(const n of a)if(n.type==="childList")for(const l of n.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&r(l)}).observe(document,{childList:!0,subtree:!0});function o(a){const n={};return a.integrity&&(n.integrity=a.integrity),a.referrerPolicy&&(n.referrerPolicy=a.referrerPolicy),a.crossOrigin==="use-credentials"?n.credentials="include":a.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function r(a){if(a.ep)return;a.ep=!0;const n=o(a);fetch(a.href,n)}})();let b=Object.getPrototypeOf,E,D,m,S,N={isConnected:1},oe=1e3,B,U={},re=b(N),W=b(b),_,R=(e,t,o,r)=>(e??(setTimeout(o,r),new Set)).add(t),G=(e,t,o)=>{let r=m;m=t;try{return e(o)}catch(a){return console.error(a),o}finally{m=r}},k=e=>e.filter(t=>{var o;return(o=t._dom)==null?void 0:o.isConnected}),H=e=>B=R(B,e,()=>{for(let t of B)t._bindings=k(t._bindings),t._listeners=k(t._listeners);B=_},oe),x={get val(){var e;return(e=m==null?void 0:m._getters)==null||e.add(this),this.rawVal},get oldVal(){var e;return(e=m==null?void 0:m._getters)==null||e.add(this),this._oldVal},set val(e){var t;(t=m==null?void 0:m._setters)==null||t.add(this),e!==this.rawVal&&(this.rawVal=e,this._bindings.length+this._listeners.length?(D==null||D.add(this),E=R(E,this,ae)):this._oldVal=e)}},J=e=>({__proto__:x,rawVal:e,_oldVal:e,_bindings:[],_listeners:[]}),L=(e,t)=>{let o={_getters:new Set,_setters:new Set},r={f:e},a=S;S=[];let n=G(e,o,t);n=(n??document).nodeType?n:new Text(n);for(let l of o._getters)o._setters.has(l)||(H(l),l._bindings.push(r));for(let l of S)l._dom=n;return S=a,r._dom=n},C=(e,t=J(),o)=>{let r={_getters:new Set,_setters:new Set},a={f:e,s:t};a._dom=o??(S==null?void 0:S.push(a))??N,t.val=G(e,r,t.rawVal);for(let n of r._getters)r._setters.has(n)||(H(n),n._listeners.push(a));return t},Q=(e,...t)=>{for(let o of t.flat(1/0)){let r=b(o??0),a=r===x?L(()=>o.val):r===W?L(o):o;a!=_&&e.append(a)}return e},X=(e,t,...o)=>{var s;let[{is:r,...a},...n]=b(o[0]??0)===re?o:[{},...o],l=e?document.createElementNS(e,t,{is:r}):document.createElement(t,{is:r});for(let[d,c]of Object.entries(a)){let p=P=>P?Object.getOwnPropertyDescriptor(P,d)??p(b(P)):_,h=t+","+d,i=U[h]??(U[h]=((s=p(b(l)))==null?void 0:s.set)??0),F=d.startsWith("on")?(P,te)=>{let T=d.slice(2);l.removeEventListener(T,te),l.addEventListener(T,P)}:i?i.bind(l):l.setAttribute.bind(l,d),g=b(c??0);d.startsWith("on")||g===W&&(c=C(c),g=x),g===x?L(()=>(F(c.val,c._oldVal),l)):F(c)}return Q(l,n)},z=e=>({get:(t,o)=>X.bind(_,e,o)}),Y=(e,t)=>t?t!==e&&e.replaceWith(t):e.remove(),ae=()=>{let e=0,t=[...E].filter(r=>r.rawVal!==r._oldVal);do{D=new Set;for(let r of new Set(t.flatMap(a=>a._listeners=k(a._listeners))))C(r.f,r.s,r._dom),r._dom=_}while(++e<100&&(t=[...D]).length);let o=[...E].filter(r=>r.rawVal!==r._oldVal);E=_;for(let r of new Set(o.flatMap(a=>a._bindings=k(a._bindings))))Y(r._dom,L(r.f,r._dom)),r._dom=_;for(let r of o)r._oldVal=r.rawVal};const y={tags:new Proxy(e=>new Proxy(X,z(e)),z()),hydrate:(e,t)=>Y(e,L(t,e)),add:Q,state:J,derive:C},ne="modulepreload",le=function(e){return"/"+e},M={},se=function(t,o,r){let a=Promise.resolve();if(o&&o.length>0){let l=function(c){return Promise.all(c.map(p=>Promise.resolve(p).then(h=>({status:"fulfilled",value:h}),h=>({status:"rejected",reason:h}))))};document.getElementsByTagName("link");const s=document.querySelector("meta[property=csp-nonce]"),d=(s==null?void 0:s.nonce)||(s==null?void 0:s.getAttribute("nonce"));a=l(o.map(c=>{if(c=le(c),c in M)return;M[c]=!0;const p=c.endsWith(".css"),h=p?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${c}"]${h}`))return;const i=document.createElement("link");if(i.rel=p?"stylesheet":ne,p||(i.as="script"),i.crossOrigin="",i.href=c,d&&i.setAttribute("nonce",d),document.head.appendChild(i),p)return new Promise((F,g)=>{i.addEventListener("load",F),i.addEventListener("error",()=>g(new Error(`Unable to preload CSS for ${c}`)))})}))}function n(l){const s=new Event("vite:preloadError",{cancelable:!0});if(s.payload=l,window.dispatchEvent(s),!s.defaultPrevented)throw l}return a.then(l=>{for(const s of l||[])s.status==="rejected"&&n(s.reason);return t().catch(n)})};function ie(e={}){const{immediate:t=!1,onNeedRefresh:o,onOfflineReady:r,onRegistered:a,onRegisteredSW:n,onRegisterError:l}=e;let s,d,c;const p=async(i=!0)=>{await d,c==null||c()};async function h(){if("serviceWorker"in navigator){if(s=await se(async()=>{const{Workbox:i}=await import("./workbox-window.prod.es5-B9K5rw8f.js");return{Workbox:i}},[]).then(({Workbox:i})=>new i("/sw.js",{scope:"/",type:"classic"})).catch(i=>{l==null||l(i)}),!s)return;c=()=>{s==null||s.messageSkipWaiting()};{let i=!1;const F=()=>{i=!0,s==null||s.addEventListener("controlling",g=>{g.isUpdate&&window.location.reload()}),o==null||o()};s.addEventListener("installed",g=>{typeof g.isUpdate>"u"?typeof g.isExternal<"u"&&g.isExternal?F():!i&&(r==null||r()):g.isUpdate||r==null||r()}),s.addEventListener("waiting",F)}s.register({immediate:t}).then(i=>{n?n("/sw.js",i):a==null||a(i)}).catch(i=>{l==null||l(i)})}}return d=h(),p}"serviceWorker"in navigator&&window.addEventListener("load",()=>{ie({immediate:!1,onRegistered(e){console.log("Service worker has been registered")},onRegisterError(e){console.error("Service worker registration error",e)}})});const{div:u,header:ce,main:de,aside:ue,h1:fe,h2:Z,button:I,input:ge,label:me,span:pe,dialog:he,nav:Ve,ul:ye,li:be,p:we,a:ve,img:Fe}=y.tags,f=y.state([]),A=y.state(!1),w=y.state(!0),v=new Map;function Se(e){if(v.has(e.id))return v.get(e.id);const t=URL.createObjectURL(e.file);return v.set(e.id,t),console.log(`Created and tracked blob URL for ${e.id}: ${t}`),t}function _e(e){if(v.has(e)){const t=v.get(e);URL.revokeObjectURL(t),v.delete(e),console.log(`Released blob URL for ${e}`)}}function $(){return new Promise((e,t)=>{var r;if(!("indexedDB"in window)){const a=new Error("IndexedDB is not supported in this browser");return console.error(a),t(a)}(r=navigator.storage)!=null&&r.estimate&&navigator.storage.estimate().then(a=>{const n=a.usage/a.quota*100;console.log(`Storage usage: ${n.toFixed(2)}% of available quota`),n>80&&console.warn("Storage is nearing capacity! Consider clearing some data.")}),console.log("Opening IndexedDB...");const o=indexedDB.open("localfilesDB",2);o.onupgradeneeded=a=>{console.log("Database upgrade needed, creating object stores");const n=a.target.result;n.objectStoreNames.contains("mediaFiles")||(n.createObjectStore("mediaFiles",{keyPath:"id"}),console.log("mediaFiles object store created successfully")),n.objectStoreNames.contains("sharedFiles")||(n.createObjectStore("sharedFiles",{keyPath:"id"}),console.log("sharedFiles object store created successfully"))},o.onsuccess=a=>{console.log("IndexedDB opened successfully");const n=a.target.result;n.onerror=l=>{console.error("Database error:",l.target.errorCode)},e(n)},o.onerror=a=>{const n=a.target.error;console.error("IndexedDB error:",n),n.name==="QuotaExceededError"?alert("Storage quota exceeded. Please delete some files before adding more."):alert(`Database error: ${n.message}`),t(n)}})}async function Pe(e,t,o){return new Promise((r,a)=>{if(!e)return console.error("Database not initialized for storeFileBlob"),a(new Error("Database not initialized"));const s=e.transaction("mediaFiles","readwrite").objectStore("mediaFiles").put({id:t,blob:o});s.onsuccess=()=>r(),s.onerror=d=>a(d.target.error)})}async function Ee(e,t){return new Promise((o,r)=>{if(!e)return console.error("Database not initialized for retrieveFileBlob"),r(new Error("Database not initialized"));const l=e.transaction("mediaFiles","readonly").objectStore("mediaFiles").get(t);l.onsuccess=()=>o(l.result?l.result.blob:null),l.onerror=s=>r(s.target.error)})}async function De(e,t){return new Promise((o,r)=>{if(!e)return console.error("Database not initialized for removeFileBlob"),r(new Error("Database not initialized"));const l=e.transaction("mediaFiles","readwrite").objectStore("mediaFiles").delete(t);l.onsuccess=()=>o(),l.onerror=s=>r(s.target.error)})}async function Le(e){return new Promise((t,o)=>{if(!e)return console.error("Database not initialized for clearAllFileBlobs"),o(new Error("Database not initialized"));const n=e.transaction("mediaFiles","readwrite").objectStore("mediaFiles").clear();n.onsuccess=()=>t(),n.onerror=l=>o(l.target.error)})}async function Ie(e){return new Promise((t,o)=>{if(!e)return console.error("Database not initialized for retrieveSharedFiles"),o(new Error("Database not initialized"));const n=e.transaction("sharedFiles","readonly").objectStore("sharedFiles").getAll();n.onsuccess=()=>t(n.result||[]),n.onerror=l=>o(l.target.error)})}async function Ae(e){return new Promise((t,o)=>{if(!e)return console.error("Database not initialized for clearSharedFiles"),o(new Error("Database not initialized"));const n=e.transaction("sharedFiles","readwrite").objectStore("sharedFiles").clear();n.onsuccess=()=>t(),n.onerror=l=>o(l.target.error)})}async function V(){try{const e=await $(),t=await Ie(e);if(t.length>0){console.log(`Found ${t.length} shared files to process`);const o=t.map(r=>r.file);return await ee(o),await Ae(e),alert(`${t.length} shared file(s) added to your library!`),!0}return!1}catch(e){return console.error("Error processing shared files:",e),!1}}const K="localFilesAppMetadata";function $e(){try{const e=localStorage.getItem(K);return e?JSON.parse(e):[]}catch(e){return console.error("Error reading metadata from Local Storage:",e),[]}}function O(e){try{const t=e.map(o=>{const{file:r,...a}=o;return a});localStorage.setItem(K,JSON.stringify(t))}catch(t){console.error("Error saving metadata to Local Storage:",t),t.name==="QuotaExceededError"&&alert("Local Storage quota exceeded. Cannot save file list. Please clear some browser data.")}}const Be=async()=>{try{w.val=!0,console.log("Loading data...");const e=await $(),t=$e();console.log(`Loaded ${t.length} metadata entries from Local Storage.`);const o=[];for(const r of t)try{const a=await Ee(e,r.id);a?o.push({...r,file:a}):console.warn(`Blob not found in IndexedDB for file ID: ${r.id}. Skipping file.`)}catch(a){console.error(`Error loading blob for file ID ${r.id}:`,a)}return f.val=[...o],console.log(`Updated mediaFiles state with ${o.length} files.`),w.val=!1,f.val}catch(e){return console.error("Error in loadData:",e),w.val=!1,[]}};async function ee(e){if(!e||e.length===0){console.error("No files selected");return}document.body.className=document.body.className.replace("is-uploading","");const o=[],r=await $();for(let a=0;a<e.length;a++){const n=e[a];if(console.log(`Processing file ${a+1}/${e.length}: ${n.name}`),n.size>1048576e3){alert(`File ${n.name} exceeds the 1000MB size limit.`);continue}const s={id:`file-${Date.now()}-${a}`,name:n.name,type:n.type,size:n.size,file:n,progress:0,dateAdded:new Date().toISOString()};try{await Pe(r,s.id,s.file),console.log(`Blob for ${s.name} stored in IndexedDB.`),o.push(s)}catch(d){console.error(`Failed to store blob for ${s.name}:`,d),alert(`Could not save file ${s.name} due to a storage error.`);continue}console.log(`File ${n.name} processed successfully`)}if(o.length>0){console.log(`Adding ${o.length} files to the library`);const a=[...f.val,...o];f.val=a,O(a),console.log("File metadata saved to Local Storage."),A.val=!0,alert(`${o.length} files uploaded successfully!`),o.length>0&&setTimeout(()=>{j(o[0])},500)}}function j(e){console.log("Attempting to play file:",e);try{const t=document.getElementById("media-player");if(!t){console.error("Media player element not found"),alert("Media player not found. Please refresh the page.");return}const o=document.getElementById("video-container");o&&(o.style.display="block");const r=document.querySelector(".upload-prompt");r&&(r.style.display="none");let a;if(e.file&&e.file instanceof File)a=Se(e);else if(e.data&&typeof e.data=="string")a=e.data;else{console.error("File has no playable source:",e),alert(`Cannot play ${e.name||"file"}: Invalid source format`);return}console.log(`Setting player source to: ${a}`),t.src=a,t.setAttribute("data-current-file-id",e.id),typeof e.progress=="number"&&(t.currentTime=e.progress),window.innerWidth<768&&(A.val=!1),setTimeout(()=>{const n=t.play();n!==void 0&&n.then(()=>{console.log(`Playing ${e.name||"file"} successfully`);try{localStorage.setItem("lastPlayedFileId",e.id),console.log(`Set lastPlayedFileId to: ${e.id}`)}catch(l){console.warn("Could not save lastPlayedFileId to Local Storage:",l)}}).catch(console.error)},300)}catch(t){console.error("Error in playFile function:",t),alert(`Error playing file: ${t.message}`)}}async function ke(e){console.log(`Deleting file with ID: ${e}`),_e(e);try{const o=await $();await De(o,e),console.log(`Blob for file ID ${e} removed from IndexedDB.`)}catch(o){console.error(`Failed to remove blob for file ID ${e} from IndexedDB:`,o)}const t=f.val.filter(o=>o.id!==e);f.val=t,O(t),console.log("File metadata updated in Local Storage after deletion.")}function xe(){document.getElementById("confirm-dialog").showModal()}async function Oe(){v.forEach((e,t)=>{URL.revokeObjectURL(e)}),v.clear();try{const e=await $();await Le(e),console.log("All file blobs cleared from IndexedDB.")}catch(e){console.error("Failed to clear all file blobs from IndexedDB:",e),alert("Could not clear all stored file data. Please try again.")}O([]),console.log("File metadata cleared from Local Storage."),f.val=[],document.getElementById("confirm-dialog").close()}function Ue(){document.getElementById("confirm-dialog").close()}function q(e,t){const o=f.val.map(r=>r.id===e?{...r,progress:t}:r);f.val=o,O(o)}function Ce(){return ue({class:y.derive(()=>`sidebar ${A.val?"open":""}`),"aria-label":"File sidebar"},Z({},"Your Files"),y.derive(()=>w.val?u({class:"loading-message"},"Loading files..."):f.val.length>0?u({},ye({},...f.val.map(e=>{console.log("Rendering file in sidebar:",e);const t=e.name||"Unnamed File";return be({class:"file-item","data-id":e.id},pe({onclick:()=>{console.log("Clicked on file:",e),j(e)},class:"file-name"},t),I({class:"delete-btn outline",onclick:o=>{o.stopPropagation(),console.log(`Deleting file: ${e.id}`),ke(e.id)}},"×"))})),I({class:"delete-all-btn outline",onclick:xe},"Delete All")):u({class:"empty-message"},"No files added yet")))}function je(){return ce({},u(I({class:"hamburger outline",onclick:()=>{A.val=!A.val}},"☰"),fe({},"localfiles.stream"),u({class:"github-link"},ve({href:"https://github.com/netanel-haber/localfiles.stream",target:"_blank"},Fe({src:"https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png",alt:"GitHub"})))),u(me({class:"upload-btn",for:"file-upload"},"Upload Files"),ge({type:"file",id:"file-upload",accept:"audio/*,video/*",multiple:!0,style:"display: none",onchange:async e=>{try{e.target.files&&e.target.files.length>0?(await ee(e.target.files),console.log(`Selected ${e.target.files.length} files`)):console.log("No files selected"),e.target.value=""}catch(t){console.error("Error in file input change handler (or during addFiles):",t),alert("Failed to process selected files. Please try again.")}}})))}function Te(){return u({class:"media-container"},u({class:"player-wrapper"},u({class:"upload-prompt",style:y.derive(()=>{const e=w.val?!1:f.val.length===0;return console.log(`Upload prompt visibility: ${e?"visible":"hidden"}`),e?"display: flex":"display: none"})},"Upload media files to start playing"),u({class:"loading-indicator",style:y.derive(()=>w.val?"display: flex":"display: none")},"Loading your media files..."),u({id:"video-container",class:"video-container",style:"display: none;"},u({class:"media-element-container"},y.tags.video({id:"media-player",controls:!0,preload:"auto",controlsList:"nodownload",crossorigin:"anonymous",playsinline:!0,ontimeupdate:e=>{const t=e.target.getAttribute("data-current-file-id");t&&q(t,e.target.currentTime)},onplay:e=>{console.log("Media started playing. File ID:",e.target.getAttribute("data-current-file-id"))},onended:e=>{console.log("Media ended. Saving final progress.");const t=e.target.getAttribute("data-current-file-id");t&&e.target.duration&&Number.isFinite(e.target.duration)&&q(t,e.target.duration),e.target.removeAttribute("data-current-file-id")},onerror:e=>{console.error("Media player error:",e.target.error),alert(`Error playing media: ${e.target.error?e.target.error.message:"Unknown error"}`),e.target.removeAttribute("data-current-file-id")}})))))}function ze(){return he({id:"confirm-dialog"},u({class:"dialog-content"},Z({},"Confirm Deletion"),we({},"Are you sure you want to delete all files?"),u({class:"dialog-buttons"},I({onclick:Ue,class:"secondary"},"Cancel"),I({onclick:Oe},"Delete All"))))}function Me(){return u({id:"layout"},je(),u({class:"content"},Ce(),de({},Te())),ze())}(async()=>{try{w.val=!0,console.log("Mounting app..."),y.add(document.getElementById("app"),Me()),await new Promise(t=>setTimeout(t,100)),console.log("Loading data..."),await Be();const e=new URLSearchParams(window.location.search);if(e.get("shared")==="true"?(console.log("App opened with shared files, processing..."),await V(),window.history.replaceState({},document.title,window.location.pathname)):e.get("error")==="share_failed"?(console.error("Share operation failed"),alert("Failed to share files to the app. Please try again."),window.history.replaceState({},document.title,window.location.pathname)):await V(),console.log(`App initialized with ${f.val.length} files`),f.val.length>0)try{const t=localStorage.getItem("lastPlayedFileId");if(t){console.log(`Found lastPlayedFileId: ${t}`);const o=f.val.find(r=>r.id===t);o?(console.log("Attempting to autoplay last played file:",o),j(o)):console.log("Last played file ID found, but file not in current media list.")}}catch(t){console.warn("Could not retrieve or play lastPlayedFileId:",t)}f.val.length>0&&console.log("Files found, showing sidebar")}catch(e){console.error("Error initializing app:",e),w.val=!1}})();
